#!/usr/bin/python3

import requests
import argparse

radius_zips = [95125,95126,95113,95128,95150,95151,95152,95153,95154,95155,95156,95157,95158,95159,95160,95161,95164,95170,95172,95173,95190,95191,95193,95194,95196,95103,95106,95108,95109,95115,95192,95118,95009,95011,95112,95110,95101,95136,95124,95008,95111,95122,95117,95053,95116,95130,95121,95050,95052,95055,95056,95123,95133,95032,95129,95051,95131,95031,95030,95148,95071,95119,95015,95127,95054,95120,94087,95132,94086,95139,95036,95070,94088,94085,95134,95042,95138,95035,95013,95033,95135,95026,95044,95014,94089,95002,94041,95141,94035,94039,94042,94040,94024,95140,94043,94023,94022,94306,94538,94539,94304,94303,95066,94302,94309,95006,95037,94301,94305,95018,95007,95005,95038,94560,94537,94028,95073,94586,95065,94026,95041,94536,94025,94027,95003,94555,94550,94021,94020,95046,95060,95001,94061,94063,95010,95064,94587,94064,95062,94062,95061,95063,95067,94566,95017,94070,94060,94544,94065,94074,95019,94542,95020,94545,95076,94002,95021,94588,94404,94540,94543,94557,95077,94552,94541,94403,94568,94402,94580,94497,94401,94579,94019,94578,94010,94582,94577,95377,94011,95039,95004,94551,94583,94546,94603,95376,94018,94128,94030,94605,94621,94506,94502,95391,94526,94038,95012,95045,94613,94066,94619,95387,94083,94601,95360,94037,95304,94528,94080,95363,94514,94507,93907,94044,94602,94501,94606,94556,94570,94575,94005,95378,94014,94124,94610,94516,94617,94604,94614,94620,94622,94623,94624,94649,94659,94660,94661,94666,94595,94134,94612,94615,95024,94015,94611,94517,94596,94607,94016,94598,94112,93906,95385,94618,94609,94110,94017,94563,94107,94158,94513,94549,94662,93933,94608,94127,94131,94705,94103,94105,94114,94132,94119,94120,94125,94126,94137,94139,94140,94141,94142,94143,94144,94145,94146,94147,94151,94159,94160,94161,94163,94164,94172,94177,94188,94505,94102,94104,94597,94704,94108,94111,94117,94703,94130,94720,94702,94116,94701,94712,93902,93912,93915,94109,94115,94709,94133,94122,93955,94710,94118,93905,94123,94518,94531,93901,94708,94521,94706,94523,94707,94129,94121,93950,95337,95330,94522,94524,94527,94529,95023,94509,93942,94530,94519,95358,95313,93908,93943,93962,94553,94548,93953,94565,93940,94520,94804,95075,93944,94805,94966,94802,94808,94803,94850,95234,94807,93922,94920,93921,94965,94820,95322,95231,95206,95208,94564,95368,94801,94806,95366,94547,95336,94572,95307,94569,94511,95350,95397,95352,95353,94561,94925,95203,93635,94525,94974,94942,95351,95356,94941,94964,95374,93925,95324,94976,95354,95219,94939,95204,94977,95267,95269,95296,95297,95201,94510,95202,95328,95211,94904,94901,94512,95205,95207,95380,93926,94912,94913,94914,94915,95355,95213,94957,94590,94591,95381,95319,95320,94979,94585,95210,95209,95382,94970,95367,94592,95357,94978,94960,95326,93923,94589,94903,94930,94571,94924,95641,95215,95315,95212,95334,94973,95242,94949,93924,94963,94503,94534,95686,94933,94938,95241,94998,94948,95690,94535,94946,95680,94945,95303,95312,95258,94533,95301,95316,94947,95253,94956,93960,94559,95240,94950,95361,95236,93620,95323,95615,94581,95476,93665,95625,95220,95687,95237,95386,95696,93661,94954,95487,95230,95388,95043,95348,95620,94999,94953,94975,95757,94955,95317,95433,95632,95639,95341,95416,95688,95343,95344,95612,93927,95228,95227,94937,94952,93622,95431,95254,94599,94951,95442,95759,95225,95758,95832,94940,95369,95638,95340,94562,95252,94931,95693,94926,94927,94928,95831,95823,94573,93640,94971,95624,95452,95329,95226,95828,95617,95327,95822,93920,95616,95365,95618,94558,95824,94929,95829,95222,95694,95407,95409,95820,95830,95404,95405,95640,95818,95817,95325,94972,95309,95406,93610,95402,95826,95798,95799,95221,94574,95814,95840,95851,95852,95853,95860,95865,95866,95867,95894,95899,95812,95813,95816,94203,94204,94205,94206,94207,94208,94209,94211,94229,94230,94232,94234,94235,94236,94237,94239,94240,94244,94245,94247,94248,94249,94250,94252,94254,94256,94257,94258,94259,94261,94262,94263,94267,94268,94269,94271,94273,94274,94277,94278,94279,94280,94282,94283,94284,94285,94287,94288,94289,94290,94291,94293,94294,94295,94296,94297,94298,94299,95819,95605,95811,95473,93930,94922,94576,95827,95655,95333,95825,95472,95833,95864,95401,95691,95815,94508,95683,95347,95444,95249,95741,95642,95654,95370,95834,93928,95373,94923,95403,95251,95439,95247,95821,95306,95653,95609,95838,95742,95695,95670,95776,95305,95608,95229,95419,95835,95310,95601,95699,93932,95837,95465,95652,93668,95607,95246,94515,95669,95660,95673,95841,95685,93637,95627,95436,95697,95492,95628]

def get_data(state):
        raw_data = requests.get( 'https://www.vaccinespotter.org/api/v0/states/' + state + '.json' )
        data = raw_data.json()
        return data


def filter_results(data):
    ret = []
    for d in data["features"]:
        p = d["properties"]
        if p["postal_code"] and int(p["postal_code"]) in radius_zips and \
                p["appointments_available_all_doses"] and \
                len(p["appointments"]) > 0:
            ret.append(p)
    return ret





def main():
        parser = argparse.ArgumentParser( description='Check for available vaccine appointments using vaccinespotter.org API' , formatter_class=argparse.RawTextHelpFormatter )
        parser.add_argument( '-s' , '--state-code' , help='Specify the state code of the JSON from https://www.vaccinespotter.org/api/ ( default: CA )' , default="CA" )
        args = parser.parse_args()
        data = get_data(args.state_code)
        filtered = filter_results(data)
        for f in filtered:
            appointment_count = len(f["appointments"])
            print(f"{f['city']}, {f['state']} {f['address']} {f['postal_code']} - {f['name']} -  {appointment_count} appts" )
            

if __name__ == "__main__":
    # execute only if run as a script
    main()
